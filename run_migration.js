// üîß SCRIPT DE MIGRATION S√âCURIT√â DOCUMENTS
// üìÖ Cr√©√© le : 21 Ao√ªt 2025

const mysql = require('mysql2/promise');
const fs = require('fs').promises;
const path = require('path');

async function runMigration() {
  let connection;
  
  try {
    // Configuration de connexion √† la base de donn√©es
    const dbConfig = {
      host: 'localhost',
      user: 'root',
      password: '', // Modifier si n√©cessaire
      database: 'labresult_mvp',
      multipleStatements: true
    };

    console.log('üîó Connexion √† la base de donn√©es...');
    connection = await mysql.createConnection(dbConfig);

    // Lire le fichier de migration
    const migrationPath = path.join(__dirname, 'migration_secure_documents.sql');
    const migrationSQL = await fs.readFile(migrationPath, 'utf8');

    console.log('üìã Ex√©cution de la migration...');
    
    // Ex√©cuter le script de migration
    const [results] = await connection.execute(migrationSQL);
    
    console.log('‚úÖ Migration ex√©cut√©e avec succ√®s!');
    console.log('üìä R√©sultats:', results);

    // V√©rifier que la table a √©t√© cr√©√©e
    const [tables] = await connection.execute("SHOW TABLES LIKE 'document_access'");
    if (tables.length > 0) {
      console.log('‚úÖ Table document_access cr√©√©e avec succ√®s');
      
      // Afficher la structure de la table
      const [columns] = await connection.execute("DESCRIBE document_access");
      console.log('üìã Structure de la table:');
      columns.forEach(col => {
        console.log(`  - ${col.Field}: ${col.Type} ${col.Null === 'NO' ? 'NOT NULL' : 'NULL'} ${col.Key ? `(${col.Key})` : ''}`);
      });
    } else {
      console.log('‚ùå Erreur: Table document_access non trouv√©e apr√®s migration');
    }

  } catch (error) {
    console.error('‚ùå Erreur lors de la migration:', error.message);
    
    if (error.code === 'ER_NO_SUCH_TABLE') {
      console.log('üí° Suggestion: V√©rifiez que la base de donn√©es labresult_mvp existe');
    } else if (error.code === 'ER_ACCESS_DENIED_ERROR') {
      console.log('üí° Suggestion: V√©rifiez les param√®tres de connexion MySQL');
    }
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå Connexion ferm√©e');
    }
  }
}

// Ex√©cuter la migration
if (require.main === module) {
  runMigration();
}

module.exports = { runMigration };