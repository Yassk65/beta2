// üß™ TEST RAPIDE DE L'API AVEC LES DONN√âES DE TEST
// üìÖ Cr√©√© le : 11 Ao√ªt 2025
// üéØ Tester les principales fonctionnalit√©s avec les comptes cr√©√©s

const axios = require('axios');

const API_BASE = 'http://localhost:3000/api';

// Comptes de test
const testAccounts = {
  superAdmin: { email: 'admin@sante-app.fr', password: 'admin123' },
  hospitalAdmin: { email: 'admin.chu-paris@sante-app.fr', password: 'hospital123' },
  labAdmin: { email: 'admin.cerba@sante-app.fr', password: 'lab123' },
  doctor: { email: 'dr.bernard@chu-paris.fr', password: 'staff123' },
  patient: { email: 'jean.dupont@email.fr', password: 'patient123' }
};

async function testAPI() {
  console.log('üß™ Test de l\'API avec les donn√©es de test...\n');

  try {
    // 1. Test de sant√© de l'API
    console.log('1Ô∏è‚É£ Test de sant√© de l\'API...');
    const healthResponse = await axios.get(`${API_BASE}/health`);
    console.log(`   ‚úÖ API op√©rationnelle: ${healthResponse.data.message}`);

    // 2. Test de connexion Super Admin
    console.log('\n2Ô∏è‚É£ Test connexion Super Admin...');
    const adminLogin = await axios.post(`${API_BASE}/auth/login`, testAccounts.superAdmin);
    const adminToken = adminLogin.data.data.token;
    console.log(`   ‚úÖ Connexion r√©ussie: ${adminLogin.data.data.user.first_name} ${adminLogin.data.data.user.last_name}`);

    // 3. Test r√©cup√©ration des statistiques (Super Admin)
    console.log('\n3Ô∏è‚É£ Test statistiques g√©n√©rales...');
    const statsResponse = await axios.get(`${API_BASE}/users/stats`, {
      headers: { Authorization: `Bearer ${adminToken}` }
    });
    console.log(`   ‚úÖ Statistiques r√©cup√©r√©es:`, statsResponse.data.data);

    // 4. Test connexion Patient
    console.log('\n4Ô∏è‚É£ Test connexion Patient...');
    const patientLogin = await axios.post(`${API_BASE}/auth/login`, testAccounts.patient);
    const patientToken = patientLogin.data.data.token;
    console.log(`   ‚úÖ Connexion patient r√©ussie: ${patientLogin.data.data.user.first_name} ${patientLogin.data.data.user.last_name}`);

    // 5. Test r√©cup√©ration profil patient
    console.log('\n5Ô∏è‚É£ Test profil patient...');
    const profileResponse = await axios.get(`${API_BASE}/auth/profile`, {
      headers: { Authorization: `Bearer ${patientToken}` }
    });
    console.log(`   ‚úÖ Profil r√©cup√©r√©: ${profileResponse.data.data.user.email}`);

    // 6. Test connexion Admin H√¥pital
    console.log('\n6Ô∏è‚É£ Test connexion Admin H√¥pital...');
    const hospitalAdminLogin = await axios.post(`${API_BASE}/auth/login`, testAccounts.hospitalAdmin);
    const hospitalAdminToken = hospitalAdminLogin.data.data.token;
    console.log(`   ‚úÖ Connexion admin h√¥pital r√©ussie: ${hospitalAdminLogin.data.data.user.first_name} ${hospitalAdminLogin.data.data.user.last_name}`);

    // 7. Test r√©cup√©ration des patients (Admin H√¥pital)
    console.log('\n7Ô∏è‚É£ Test liste des patients (Admin H√¥pital)...');
    const patientsResponse = await axios.get(`${API_BASE}/admin/patients`, {
      headers: { Authorization: `Bearer ${hospitalAdminToken}` }
    });
    console.log(`   ‚úÖ ${patientsResponse.data.data.patients.length} patients r√©cup√©r√©s`);

    // 8. Test r√©cup√©ration des h√¥pitaux
    console.log('\n8Ô∏è‚É£ Test liste des h√¥pitaux...');
    const hospitalsResponse = await axios.get(`${API_BASE}/users/hospitals`, {
      headers: { Authorization: `Bearer ${patientToken}` }
    });
    console.log(`   ‚úÖ ${hospitalsResponse.data.data.hospitals.length} h√¥pitaux r√©cup√©r√©s`);

    // 9. Test r√©cup√©ration des laboratoires
    console.log('\n9Ô∏è‚É£ Test liste des laboratoires...');
    const labsResponse = await axios.get(`${API_BASE}/users/laboratories`, {
      headers: { Authorization: `Bearer ${patientToken}` }
    });
    console.log(`   ‚úÖ ${labsResponse.data.data.laboratories.length} laboratoires r√©cup√©r√©s`);

    // 10. Test connexion M√©decin
    console.log('\nüîü Test connexion M√©decin...');
    const doctorLogin = await axios.post(`${API_BASE}/auth/login`, testAccounts.doctor);
    const doctorToken = doctorLogin.data.data.token;
    console.log(`   ‚úÖ Connexion m√©decin r√©ussie: ${doctorLogin.data.data.user.first_name} ${doctorLogin.data.data.user.last_name}`);

    console.log('\n‚úÖ TOUS LES TESTS SONT PASS√âS AVEC SUCC√àS !');
    console.log('\nüìã R√âSUM√â DES FONCTIONNALIT√âS TEST√âES :');
    console.log('   ‚úÖ Sant√© de l\'API');
    console.log('   ‚úÖ Authentification (tous les r√¥les)');
    console.log('   ‚úÖ R√©cup√©ration des profils');
    console.log('   ‚úÖ Statistiques g√©n√©rales');
    console.log('   ‚úÖ Gestion des patients');
    console.log('   ‚úÖ Liste des √©tablissements');

    console.log('\nüöÄ L\'API est pr√™te √† √™tre utilis√©e !');

  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error.response?.data || error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° SOLUTION: D√©marrez d\'abord le serveur avec:');
      console.log('   cd backend/src');
      console.log('   node app.js');
    }
  }
}

// V√©rifier si le serveur est d√©marr√©
console.log('üîç V√©rification que le serveur est d√©marr√©...');
console.log('üí° Assurez-vous que le serveur tourne sur http://localhost:3000');
console.log('   Pour d√©marrer: cd backend/src && node app.js\n');

testAPI();